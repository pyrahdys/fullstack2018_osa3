{"version":3,"sources":["components/Person.js","services/persons.js","App.js","index.js"],"names":["Person","_ref","person","removeName","console","log","name","react_default","a","createElement","number","onClick","baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","remove","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addName","event","preventDefault","i","state","length","newName","alert","personObject","newNumber","personservice","newPerson","setState","notification","setTimeout","handleNameChange","target","value","handleNumberChange","removeNameOf","window","confirm","find","p","filter","_this2","_this3","App_Notification","message","stateNewName","onChange","stateNewNumber","type","map","components_Person","key","React","Component","Notification","className","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d6fdb83.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({person, removeName}) => {\n    console.log(person.name)\n    return (\n        <tr>\n            <td>\n                {person.name}\n            </td>\n            <td>\n                {person.number}\n            </td>\n            <td>\n                <button onClick={removeName}>Poista</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default Person","import axios from 'axios'\nconst baseUrl = '/api/persons' // muutettu osan 3 tehtävää varten // lisätty API 22:06\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n  \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n  \nexport default { getAll, create, update, remove }","import React from 'react';\nimport Person from './components/Person'\nimport personservice from './services/persons'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            persons: [],\n            newName: '',\n            newNumber: '',\n            notification: null\n        }\n    }\n\n    componentDidMount() {\n        personservice\n            .getAll()\n            .then(response => {\n                this.setState({persons: response})\n            })\n    }\n\n    addName = (event) => {\n        event.preventDefault()\n        \n        for (let i = 0; i < this.state.persons.length; i++) {\n            if (this.state.persons[i].name === this.state.newName) {\n                alert(\"Puhelinluettelossa on jo nimi \" + this.state.persons[i].name)\n                return\n            }\n        }\n\n        const personObject = {\n            name: this.state.newName,\n            number: this.state.newNumber\n            \n        }\n\n        personservice\n            .create(personObject)\n            .then(newPerson => {\n                this.setState({\n                    persons: this.state.persons.concat(newPerson),\n                    newPerson: '',\n                    notification: `lisättiin ${personObject.name}`\n                })\n                setTimeout(() => {\n                    this.setState({notification: null})\n                }, 5000)\n            })\n    }\n\n    handleNameChange = (event) => {\n        this.setState({newName: event.target.value})\n        console.log(this.state.newName)\n    }\n\n    handleNumberChange = (event) => {\n        this.setState({newNumber: event.target.value})\n        console.log(this.state.newNumber)\n    }\n\n    removeNameOf = (name) => {\n        return () => {\n            if (!window.confirm(\"Poistetaanko \" + name)) { \n                console.log(\"Ei poistettu\")\n                return\n            }\n\n            const personObject = this.state.persons.find(p => p.name === name)\n            \n            personservice\n                .remove(personObject.id)\n                .then(response => {\n                    this.setState({\n                        persons: this.state.persons.filter(p => p.name !== name),\n                        notification: `poistettiin ${personObject.name}`\n                    })\n                    setTimeout(() => {\n                        this.setState({notification: null})\n                    }, 5000)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Notification message={this.state.notification}/>\n                <h2>Puhelinluettelo</h2>\n                <form>\n                    <div>\n                        nimi: <input \n                        value={this.stateNewName}\n                        onChange={this.handleNameChange}\n                        />\n                    </div>\n                    <div>\n                        numero: <input \n                        value={this.stateNewNumber}\n                        onChange={this.handleNumberChange}\n                        />\n                    </div>\n                    <div>\n                        <button type=\"submit\" onClick={this.addName}>lisää</button>\n                    </div>\n                </form>\n                <h2>Numerot</h2>\n                <div>\n                    <table>\n                        <tbody>\n                        {this.state.persons.map(person => \n                            <Person \n                                key={person.name} \n                                person={person} \n                                removeName={this.removeNameOf(person.name)}/>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}